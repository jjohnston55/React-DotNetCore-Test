[{"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\index.js":"1","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\App.js":"2","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\api\\products.js":"4","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\constants\\index.js":"5","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\api\\categories.js":"6","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\listProducts.jsx":"7","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\getProduct.jsx":"8","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\getCategory.jsx":"9","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\listCategories.jsx":"10","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\createProduct.jsx":"11","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\createCategory.jsx":"12","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\updateProduct.jsx":"13","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\updateCategory.jsx":"14","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\deleteCategory.jsx":"15","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\deleteProduct.jsx":"16","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\getProductsByCategory.jsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":2273,"mtime":1608177031235,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1957,"mtime":1608176928610,"results":"22","hashOfConfig":"19"},{"size":56,"mtime":1608148126594,"results":"23","hashOfConfig":"19"},{"size":1628,"mtime":1608170551657,"results":"24","hashOfConfig":"19"},{"size":1460,"mtime":1608175357302,"results":"25","hashOfConfig":"19"},{"size":1489,"mtime":1608175350547,"results":"26","hashOfConfig":"19"},{"size":1434,"mtime":1608175520421,"results":"27","hashOfConfig":"19"},{"size":1375,"mtime":1608175359207,"results":"28","hashOfConfig":"19"},{"size":2622,"mtime":1608344783395,"results":"29","hashOfConfig":"19"},{"size":1592,"mtime":1608169026508,"results":"30","hashOfConfig":"19"},{"size":3629,"mtime":1608344163027,"results":"31","hashOfConfig":"19"},{"size":2005,"mtime":1608262525001,"results":"32","hashOfConfig":"19"},{"size":2002,"mtime":1608176434421,"results":"33","hashOfConfig":"19"},{"size":2090,"mtime":1608176275778,"results":"34","hashOfConfig":"19"},{"size":1741,"mtime":1608178014346,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1r5s6z9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\index.js",[],["79","80"],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\App.js",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\api\\products.js",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\constants\\index.js",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\api\\categories.js",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\listProducts.jsx",["81"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport ProductAPI from '../../api/products';\r\n\r\nconst ListProducts = (props) => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const productAPI = new ProductAPI();\r\n\r\n    useEffect(() => {\r\n        productAPI.GetProducts().then(data => {\r\n            setProducts(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                products.map((product, idx) => {\r\n                    return (\r\n                        <p key={idx}>\r\n                            <span><b>Product Name:</b> {product.productName}</span><br/>\r\n                            <span><b>Description:</b> {product.description}</span><br/>\r\n                            <span><b>Cost:</b> ${product.cost.toFixed(2)}</span><br/>\r\n                            <span><b>Is Active:</b> {product.active ? 'Yes' : 'No'}</span><br/>\r\n                            <span><b>Categories: </b> { product.productCategories.map((pc, idx) => {\r\n                                return (\r\n                                    <>\r\n                                        <span key={idx}>{pc.categoryName}</span>\r\n                                        <br/>\r\n                                    </>\r\n                                )\r\n                            })}</span>\r\n                        </p>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListProducts;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\getProduct.jsx",["82"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport ProductAPI from '../../api/products';\r\n\r\nconst GetProduct = (props) => {\r\n    const [product, setProduct] = useState();\r\n    const [productName, setProductName] = useState('');\r\n\r\n    const productAPI = new ProductAPI();\r\n\r\n    useEffect(() => {\r\n        if (productName.length > 0)\r\n            productAPI.GetProduct(productName).then(data => {\r\n                setProduct(data);\r\n            })\r\n    }, [productName]);\r\n\r\n    return (\r\n        <>\r\n            <input onChange={(evt) => setProductName(evt.target.value)} placeholder=\"Enter Product Name\" />\r\n            <br/>\r\n            {\r\n                product && \r\n                <p>\r\n                    <span><b>Product Name:</b> {product.productName}</span><br/>\r\n                    <span><b>Description:</b> {product.description}</span><br/>\r\n                    <span><b>Cost:</b> ${product.cost.toFixed(2)}</span><br/>\r\n                    <span><b>Is Active:</b> {product.active ? 'Yes' : 'No'}</span><br/>\r\n                    <span><b>Categories: </b> { product.productCategories.map((pc, idx) => {\r\n                        return (\r\n                            <>\r\n                                <span key={idx}>{pc.categoryName}</span>\r\n                                <br/>\r\n                            </>\r\n                        )\r\n                    })}</span>\r\n                </p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GetProduct;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\getCategory.jsx",["83"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport CategoryAPI from '../../api/categories';\r\n\r\nconst GetCategory = (props) => {\r\n    const [category, setCategory] = useState();\r\n    const [categoryName, setCategoryName] = useState('');\r\n\r\n    const categoryAPI = new CategoryAPI();\r\n\r\n    useEffect(() => {\r\n        if (categoryName.length > 0)\r\n            categoryAPI.GetCategory(categoryName).then(data => {\r\n                setCategory(data);\r\n            });\r\n    }, [categoryName]);\r\n\r\n    return (\r\n        <>\r\n            <input onChange={(evt) => setCategoryName(evt.target.value)} placeholder=\"Enter Category Name\" />\r\n            <br/>\r\n            {\r\n                category && \r\n                <p>\r\n                    <span><b>Category Name:</b> {category.categoryName}</span><br/>\r\n                    <span><b>Description:</b> {category.description}</span><br/>\r\n                    <span><b>Is Active:</b> {category.active ? 'Yes' : 'No'}</span><br/>\r\n                    <span><b>Products: </b> { category.productCategories.map((pc, idx) => {\r\n                        return (\r\n                            <>\r\n                                <span key={idx}>{pc.productName}</span>\r\n                                <br/>\r\n                            </>\r\n                        )\r\n                    })}</span>\r\n                </p>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GetCategory;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\listCategories.jsx",["84"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport CategoryAPI from '../../api/categories';\r\n\r\nconst ListCategories = (props) => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const categoryAPI = new CategoryAPI();\r\n\r\n    useEffect(() => {\r\n        categoryAPI.GetCategories().then(data => {\r\n            setCategories(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                categories.map((category, idx) => {\r\n                    return (\r\n                        <p key={idx}>\r\n                            <span><b>Category Name:</b> {category.categoryName}</span><br/>\r\n                            <span><b>Description:</b> {category.description}</span><br/>\r\n                            <span><b>Is Active:</b> {category.active ? 'Yes' : 'No'}</span><br/>\r\n                            <span><b>Products: </b> { category.productCategories.map((pc, idx) => {\r\n                                return (\r\n                                    <>\r\n                                        <span key={idx}>{pc.productName}</span>\r\n                                        <br/>\r\n                                    </>\r\n                                )\r\n                            })}</span>\r\n                        </p>\r\n                )})\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListCategories;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\createProduct.jsx",["85"],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\createCategory.jsx",[],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\updateProduct.jsx",["86","87"],"C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\updateCategory.jsx",["88"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport CategoryAPI from \"../../api/categories\";\r\n\r\nconst UpdateCategory = (props) => {\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [active, setActive] = useState(false);\r\n\r\n  const categoryAPI = new CategoryAPI();\r\n\r\n  const submit = () => {\r\n    if (categoryName !== \"\" && description !== \"\") {\r\n      const category = {\r\n        CategoryName: categoryName,\r\n        Description: description,\r\n        Active: active,\r\n      };\r\n      categoryAPI.UpdateCategory(categoryName, category).then((data) => {\r\n        switch (data) {\r\n          case 204:\r\n            alert(`${category.CategoryName} successfully updated`);\r\n            break;\r\n          case 404:\r\n            alert(`${category.CategoryName} does not exists`);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categoryName.length > 0)\r\n      categoryAPI.GetCategory(categoryName).then((data) => {\r\n        if (data !== undefined) {\r\n          setDescription(data.description);\r\n          setActive(data.active);\r\n        } else {\r\n          setDescription(\"\");\r\n          setActive(false);\r\n        }\r\n      });\r\n  }, [categoryName]);\r\n\r\n  return (\r\n    <>\r\n      <span>\r\n        <b>Category Name: </b>\r\n        <input onChange={(evt) => setCategoryName(evt.target.value)} />\r\n      </span>\r\n      <br />\r\n      <hr />\r\n      <span>\r\n        <b>Description: </b>\r\n        <input\r\n          value={description}\r\n          onChange={(evt) => setDescription(evt.target.value)}\r\n        />\r\n      </span>\r\n      <br />\r\n      <span>\r\n        <b>Is Active: </b>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={active}\r\n          onChange={(evt) => setActive(evt.target.checked)}\r\n        />\r\n      </span>\r\n      <br />\r\n      <button onClick={submit}>Update</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\categories\\deleteCategory.jsx",["89"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport CategoryAPI from '../../api/categories';\r\n\r\nconst DeleteCategory = (props) => {\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [category, setCategory] = useState();\r\n\r\n    const categoryAPI = new CategoryAPI();\r\n\r\n    const submit = () => {\r\n        if (categoryName !== '') {\r\n            categoryAPI.DeleteCategory(categoryName).then(data => {\r\n                switch (data) {\r\n                    case 200:\r\n                        alert(`${categoryName} successfully deleted`);\r\n                        break;\r\n                    case 404:\r\n                        alert(`${categoryName} does not exists`);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (categoryName.length > 0)\r\n            categoryAPI.GetCategory(categoryName).then(data => {\r\n                setCategory(data);\r\n            });\r\n    }, [categoryName]);\r\n\r\n    return (\r\n        <>\r\n            <span><b>Category Name: </b><input onChange={(evt) => setCategoryName(evt.target.value)} /></span><br/>\r\n            <hr />\r\n            {\r\n                category &&\r\n                <>\r\n                    <span><b>Description: </b>{category.description}</span><br/>\r\n                    <span><b>Is Active: </b><input type='checkbox' readOnly checked={category.active}/></span><br/>\r\n                    <span><b>Products: </b> { category.productCategories.map((pc, idx) => {\r\n                        return (\r\n                            <>\r\n                                <span key={idx}>{pc.productName}</span>\r\n                                <br/>\r\n                            </>\r\n                        )\r\n                    })}</span><br/>\r\n                    <button onClick={submit}>Delete</button>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteCategory;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\deleteProduct.jsx",["90"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport ProductAPI from '../../api/products';\r\n\r\nconst DeleteProduct = (props) => {\r\n    const [productName, setProductName] = useState('');\r\n    const [product, setProduct] = useState();\r\n\r\n    const productAPI = new ProductAPI();\r\n\r\n    const submit = () => {\r\n        if (productName !== '') {\r\n            productAPI.DeleteProduct(productName).then(data => {\r\n                switch (data) {\r\n                    case 200:\r\n                        alert(`${productName} successfully deleted`);\r\n                        break;\r\n                    case 404:\r\n                        alert(`${productName} does not exist`);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (productName.length > 0)\r\n            productAPI.GetProduct(productName).then(data => {\r\n                    setProduct(data);\r\n            })\r\n    }, [productName]);\r\n\r\n    return (\r\n        <>\r\n            <span><b>Search Product Name: </b><input onChange={(evt) => setProductName(evt.target.value)} /></span><br/>\r\n            <hr />\r\n            {\r\n                product &&\r\n                <>\r\n                    <span><b>Description: </b>{product.description}</span><br/>\r\n                    <span><b>Cost: </b>${product.cost.toFixed(2)}</span><br/>\r\n                    <span><b>Is Active: </b><input type='checkbox' readOnly checked={product.active} /></span><br/>\r\n                    <span><b>Categories: </b>{ \r\n                        product.productCategories.map((pc, idx) => {\r\n                        return (\r\n                            <>\r\n                                <span key={idx}>{pc.categoryName}</span>\r\n                                <br/>\r\n                            </>\r\n                        )\r\n                    })}</span><br/>\r\n                    <button onClick={submit}>Delete</button>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteProduct;","C:\\Users\\jeffj\\Documents\\GitHub\\React-DotNetCore-Test\\frontend\\src\\components\\products\\getProductsByCategory.jsx",["91"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport ProductAPI from '../../api/products';\r\nimport CategoryAPI from '../../api/categories';\r\n\r\nconst GetProductsByCategory = (props) => {\r\n\tconst [products, setProducts] = useState([]);\r\n\tconst [categories, setCategories] = useState([]);\r\n\r\n\tconst productAPI = new ProductAPI();\r\n\tconst categoryAPI = new CategoryAPI();\r\n\r\n\tconst select = (idx) => {\r\n\t\tif (idx !== 0) {\r\n\t\t\tproductAPI.GetProductsByCategory(categories[idx - 1].categoryName).then(data => {\r\n\t\t\t\tsetProducts(data);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tcategoryAPI.GetCategories().then(data => {\r\n\t\t\tsetCategories(data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<select onChange={(evt) => select(evt.target.options.selectedIndex)} >\r\n\t\t\t\t<option value='-1'>Select a Category</option>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.length > 0 &&\r\n\t\t\t\t\tcategories.map((category, idx) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={idx} value={category.categoryName}>{category.categoryName}</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<hr />\r\n\t\t\t{\r\n\t\t\t\tproducts &&\r\n\t\t\t\tproducts.map((product, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<p key={idx}>\r\n\t\t\t\t\t\t\t<span><b>Product Name:</b> {product.productName}</span><br/>\r\n\t\t\t\t\t\t\t<span><b>Description:</b> {product.description}</span><br/>\r\n\t\t\t\t\t\t\t<span><b>Cost:</b> ${product.cost.toFixed(2)}</span><br/>\r\n\t\t\t\t\t\t\t<span><b>Is Active:</b> {product.active ? 'Yes' : 'No'}</span><br/>\r\n\t\t\t\t\t\t\t{/* <span><b>Categories: </b> { product.productCategories.map((pc, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<span key={idx}>{pc.categoryName}</span>\r\n\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}</span> */}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GetProductsByCategory;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":14,"column":8,"nodeType":"98","endLine":14,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"97","line":16,"column":8,"nodeType":"98","endLine":16,"endColumn":21,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"101","line":16,"column":8,"nodeType":"98","endLine":16,"endColumn":22,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"101","line":14,"column":8,"nodeType":"98","endLine":14,"endColumn":10,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"101","line":63,"column":5,"nodeType":"98","endLine":63,"endColumn":7,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"101","line":69,"column":5,"nodeType":"98","endLine":69,"endColumn":7,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"97","line":88,"column":5,"nodeType":"98","endLine":88,"endColumn":18,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"101","line":45,"column":6,"nodeType":"98","endLine":45,"endColumn":20,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"101","line":33,"column":8,"nodeType":"98","endLine":33,"endColumn":22,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"97","line":33,"column":8,"nodeType":"98","endLine":33,"endColumn":21,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"101","line":25,"column":5,"nodeType":"98","endLine":25,"endColumn":7,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productAPI'. Either include it or remove the dependency array.","ArrayExpression",["113"],["114"],"React Hook useEffect has a missing dependency: 'categoryAPI'. Either include it or remove the dependency array.",["115"],["116"],["117"],["118"],["119"],["120"],["121"],["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"130","fix":"133"},{"desc":"126","fix":"134"},{"desc":"128","fix":"135"},{"desc":"128","fix":"136"},{"desc":"126","fix":"137"},{"desc":"130","fix":"138"},"Update the dependencies array to be: [productAPI]",{"range":"139","text":"140"},"Update the dependencies array to be: [productAPI, productName]",{"range":"141","text":"142"},"Update the dependencies array to be: [categoryAPI, categoryName]",{"range":"143","text":"144"},"Update the dependencies array to be: [categoryAPI]",{"range":"145","text":"146"},{"range":"147","text":"146"},{"range":"148","text":"146"},{"range":"149","text":"142"},{"range":"150","text":"144"},{"range":"151","text":"144"},{"range":"152","text":"142"},{"range":"153","text":"146"},[359,361],"[productAPI]",[467,480],"[productAPI, productName]",[483,497],"[categoryAPI, categoryName]",[375,377],"[categoryAPI]",[1618,1620],[1788,1790],[2275,2288],[1291,1305],[1035,1049],[1016,1029],[659,661]]